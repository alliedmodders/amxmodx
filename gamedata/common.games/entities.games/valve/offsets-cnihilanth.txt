/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your AMX Mod X install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after AMXX's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(AMX_Mod_X)
 */

"Games"
{
	"#default"
	{
		"Classes"
		{
			"CNihilanth"
			{
				"Offsets"
				{
					"m_flForce"  // float
					{
						"type"      "float"

						"windows"   "664"
						"linux"     "684"
						"mac"       "684"
					}

					"m_flNextPainSound"  // float
					{
						"type"      "float"

						"windows"   "668"
						"linux"     "688"
						"mac"       "688"
					}

					"m_velocity"  // Vector
					{
						"type"      "vector"

						"windows"   "672"
						"linux"     "692"
						"mac"       "692"
					}

					"m_avelocity"  // Vector
					{
						"type"      "vector"

						"windows"   "684"
						"linux"     "704"
						"mac"       "704"
					}

					"m_vecTarget"  // Vector
					{
						"type"      "vector"

						"windows"   "696"
						"linux"     "716"
						"mac"       "716"
					}

					"m_posTarget"  // Vector
					{
						"type"      "vector"

						"windows"   "708"
						"linux"     "728"
						"mac"       "728"
					}

					"m_vecDesired"  // Vector
					{
						"type"      "vector"

						"windows"   "720"
						"linux"     "740"
						"mac"       "740"
					}

					"m_posDesired"  // Vector
					{
						"type"      "vector"

						"windows"   "732"
						"linux"     "752"
						"mac"       "752"
					}

					"m_flMinZ"  // float
					{
						"type"      "float"

						"windows"   "744"
						"linux"     "764"
						"mac"       "764"
					}

					"m_flMaxZ"  // float
					{
						"type"      "float"

						"windows"   "748"
						"linux"     "768"
						"mac"       "768"
					}

					"m_vecGoal"  // Vector
					{
						"type"      "vector"

						"windows"   "752"
						"linux"     "772"
						"mac"       "772"
					}

					"m_flLastSeen"  // float
					{
						"type"      "float"

						"windows"   "764"
						"linux"     "784"
						"mac"       "784"
					}

					"m_flPrevSeen"  // float
					{
						"type"      "float"

						"windows"   "768"
						"linux"     "788"
						"mac"       "788"
					}

					"m_irritation"  // int
					{
						"type"      "integer"

						"windows"   "772"
						"linux"     "792"
						"mac"       "792"
					}

					"m_iLevel"  // int
					{
						"type"      "integer"

						"windows"   "776"
						"linux"     "796"
						"mac"       "796"
					}

					"m_iTeleport"  // int
					{
						"type"      "integer"

						"windows"   "780"
						"linux"     "800"
						"mac"       "800"
					}

					"m_hRecharger"  // EHANDLE
					{
						"type"      "ehandle"

						"windows"   "784"
						"linux"     "804"
						"mac"       "804"
					}

					"m_hSphere"  // EHANDLE[20]
					{
						"type"      "ehandle"
						"size"      "20"

						"windows"   "792"
						"linux"     "812"
						"mac"       "812"
					}

					"m_iActiveSpheres"  // int
					{
						"type"      "integer"

						"windows"   "952"
						"linux"     "972"
						"mac"       "972"
					}

					"m_flAdj"  // float
					{
						"type"      "float"

						"windows"   "956"
						"linux"     "976"
						"mac"       "976"
					}

					"m_pBall"  // CSprite*
					{
						"type"      "classptr"

						"windows"   "960"
						"linux"     "980"
						"mac"       "980"
					}

					"m_szRechargerTarget"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "964"
						"linux"     "984"
						"mac"       "984"
					}

					"m_szDrawUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1028"
						"linux"     "1048"
						"mac"       "1048"
					}

					"m_szTeleportUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1092"
						"linux"     "1112"
						"mac"       "1112"
					}

					"m_szTeleportTouch"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1156"
						"linux"     "1176"
						"mac"       "1176"
					}

					"m_szDeadUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1220"
						"linux"     "1240"
						"mac"       "1240"
					}

					"m_szDeadTouch"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1284"
						"linux"     "1304"
						"mac"       "1304"
					}

					"m_flShootEnd"  // float
					{
						"type"      "float"

						"windows"   "1348"
						"linux"     "1368"
						"mac"       "1368"
					}

					"m_flShootTime"  // float
					{
						"type"      "float"

						"windows"   "1352"
						"linux"     "1372"
						"mac"       "1372"
					}

					"m_hFriend"  // EHANDLE[3]
					{
						"type"      "ehandle"
						"size"      "3"

						"windows"   "1356"
						"linux"     "1376"
						"mac"       "1376"
					}
				}
			}
		}
	}
}


/**
 * Class Hierarchy
 * -
 * CBaseEntity
 *     CBaseDelay
 *         CBaseAnimating
 *             CBaseToggle
 *                 CBaseMonster
 *                     CNihilanth
 */
