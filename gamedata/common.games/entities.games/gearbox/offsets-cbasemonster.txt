/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your AMX Mod X install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after AMXX's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(AMX_Mod_X)
 */

"Games"
{
	"#default"
	{
		"Classes"
		{
			"CBaseMonster"
			{
				"Offsets"
				{
					"m_afConditions"  // int
					{
						"type"      "integer"

						"windows"   "252"
						"linux"     "272"
						"mac"       "272"
					}

					"m_hEnemy"  // EHANDLE
					{
						"type"      "ehandle"

						"windows"   "256"
						"linux"     "276"
						"mac"       "276"
					}

					"m_hTargetEnt"  // EHANDLE
					{
						"type"      "ehandle"

						"windows"   "264"
						"linux"     "284"
						"mac"       "284"
					}

					"m_hOldEnemy"  // EHANDLE[4]
					{
						"type"      "ehandle"
						"size"      "4"

						"windows"   "272"
						"linux"     "292"
						"mac"       "292"
					}

					"m_vecOldEnemy"  // Vector[4]
					{
						"type"      "vector"
						"size"      "4"

						"windows"   "304"
						"linux"     "324"
						"mac"       "324"
					}

					"m_flFieldOfView"  // float
					{
						"type"      "float"

						"windows"   "352"
						"linux"     "372"
						"mac"       "372"
					}

					"m_flWaitFinished"  // float
					{
						"type"      "float"

						"windows"   "356"
						"linux"     "376"
						"mac"       "376"
					}

					"m_flMoveWaitFinished"  // float
					{
						"type"      "float"

						"windows"   "360"
						"linux"     "380"
						"mac"       "380"
					}

					"m_Activity"  // Activity
					{
						"type"      "integer"

						"windows"   "364"
						"linux"     "384"
						"mac"       "384"
					}

					"m_IdealActivity"  // Activity
					{
						"type"      "integer"

						"windows"   "368"
						"linux"     "388"
						"mac"       "388"
					}

					"m_LastHitGroup"  // int
					{
						"type"      "integer"

						"windows"   "372"
						"linux"     "392"
						"mac"       "392"
					}

					"m_MonsterState"  // MONSTERSTATE
					{
						"type"      "integer"

						"windows"   "376"
						"linux"     "396"
						"mac"       "396"
					}

					"m_IdealMonsterState"  // MONSTERSTATE
					{
						"type"      "integer"

						"windows"   "380"
						"linux"     "400"
						"mac"       "400"
					}

					"m_iTaskStatus"  // int
					{
						"type"      "integer"

						"windows"   "384"
						"linux"     "404"
						"mac"       "404"
					}

					"m_pSchedule"  // class Schedule_t*
					{
						"type"      "pointer"

						"windows"   "388"
						"linux"     "408"
						"mac"       "408"
					}

					"m_iScheduleIndex"  // int
					{
						"type"      "integer"

						"windows"   "392"
						"linux"     "412"
						"mac"       "412"
					}

					"m_Route"  // struct WayPoint_t[8]
					{
						"type"      "structure"
						"size"      "8"

						"windows"   "396"
						"linux"     "416"
						"mac"       "416"
					}

					"m_movementGoal"  // int
					{
						"type"      "integer"

						"windows"   "524"
						"linux"     "544"
						"mac"       "544"
					}

					"m_iRouteIndex"  // int
					{
						"type"      "integer"

						"windows"   "528"
						"linux"     "548"
						"mac"       "548"
					}

					"m_moveWaitTime"  // float
					{
						"type"      "float"

						"windows"   "532"
						"linux"     "552"
						"mac"       "552"
					}

					"m_vecMoveGoal"  // Vector
					{
						"type"      "vector"

						"windows"   "536"
						"linux"     "556"
						"mac"       "556"
					}

					"m_movementActivity"  // Activity
					{
						"type"      "integer"

						"windows"   "548"
						"linux"     "568"
						"mac"       "568"
					}

					"m_iAudibleList"  // int
					{
						"type"      "integer"

						"windows"   "552"
						"linux"     "572"
						"mac"       "572"
					}

					"m_afSoundTypes"  // int
					{
						"type"      "integer"

						"windows"   "556"
						"linux"     "576"
						"mac"       "576"
					}

					"m_vecLastPosition"  // Vector
					{
						"type"      "vector"

						"windows"   "560"
						"linux"     "580"
						"mac"       "580"
					}

					"m_iHintNode"  // int
					{
						"type"      "integer"

						"windows"   "572"
						"linux"     "592"
						"mac"       "592"
					}

					"m_afMemory"  // int
					{
						"type"      "integer"

						"windows"   "576"
						"linux"     "596"
						"mac"       "596"
					}

					"m_iMaxHealth"  // int
					{
						"type"      "integer"

						"windows"   "580"
						"linux"     "600"
						"mac"       "600"
					}

					"m_vecEnemyLKP"  // Vector
					{
						"type"      "vector"

						"windows"   "584"
						"linux"     "604"
						"mac"       "604"
					}

					"m_cAmmoLoaded"  // int
					{
						"type"      "integer"

						"windows"   "596"
						"linux"     "616"
						"mac"       "616"
					}

					"m_afCapability"  // int
					{
						"type"      "integer"

						"windows"   "600"
						"linux"     "620"
						"mac"       "620"
					}

					"m_flNextAttack"  // float
					{
						"type"      "float"

						"windows"   "604"
						"linux"     "624"
						"mac"       "624"
					}

					"m_bitsDamageType"  // int
					{
						"type"      "integer"

						"windows"   "608"
						"linux"     "628"
						"mac"       "628"
					}

					"m_rgbTimeBasedDamage"  // unsigned char[8]
					{
						"type"      "character"
						"size"      "8"
						"unsigned"  "1"

						"windows"   "612"
						"linux"     "632"
						"mac"       "632"
					}

					"m_lastDamageAmount"  // int
					{
						"type"      "integer"

						"windows"   "620"
						"linux"     "640"
						"mac"       "640"
					}

					"m_bloodColor"  // int
					{
						"type"      "integer"

						"windows"   "624"
						"linux"     "644"
						"mac"       "644"
					}

					"m_failSchedule"  // int
					{
						"type"      "integer"

						"windows"   "628"
						"linux"     "648"
						"mac"       "648"
					}

					"m_flHungryTime"  // float
					{
						"type"      "float"

						"windows"   "632"
						"linux"     "652"
						"mac"       "652"
					}

					"m_flDistTooFar"  // float
					{
						"type"      "float"

						"windows"   "636"
						"linux"     "656"
						"mac"       "656"
					}

					"m_flDistLook"  // float
					{
						"type"      "float"

						"windows"   "640"
						"linux"     "660"
						"mac"       "660"
					}

					"m_iTriggerCondition"  // int
					{
						"type"      "integer"

						"windows"   "644"
						"linux"     "664"
						"mac"       "664"
					}

					"m_iszTriggerTarget"  // string_t
					{
						"type"      "stringint"

						"windows"   "648"
						"linux"     "668"
						"mac"       "668"
					}

					"m_HackedGunPos"  // Vector
					{
						"type"      "vector"

						"windows"   "652"
						"linux"     "672"
						"mac"       "672"
					}

					"m_scriptState"  // SCRIPTSTATE
					{
						"type"      "integer"

						"windows"   "664"
						"linux"     "684"
						"mac"       "684"
					}

					"m_pCine"  // CCineMonster*
					{
						"type"      "classptr"

						"windows"   "668"
						"linux"     "688"
						"mac"       "688"
					}

					"m_flShockDuration"  // float
					{
						"type"      "float"

						"windows"   "672"
						"linux"     "692"
						"mac"       "692"
					}

					"m_flShockTime"  // float
					{
						"type"      "float"

						"windows"   "676"
						"linux"     "696"
						"mac"       "696"
					}

					"m_iOldRenderMode"  // int
					{
						"type"      "integer"

						"windows"   "680"
						"linux"     "700"
						"mac"       "700"
					}

					"m_iOldRenderFX"  // int
					{
						"type"      "integer"

						"windows"   "684"
						"linux"     "704"
						"mac"       "704"
					}

					"m_OldRenderColor"  // Vector
					{
						"type"      "vector"

						"windows"   "688"
						"linux"     "708"
						"mac"       "708"
					}

					"m_flOldRenderAmt"  // float
					{
						"type"      "float"

						"windows"   "700"
						"linux"     "720"
						"mac"       "720"
					}

					"m_fShockEffect"  // BOOL
					{
						"type"      "integer"

						"windows"   "704"
						"linux"     "724"
						"mac"       "724"
					}

					"m_flLastYawTime"  // float
					{
						"type"      "float"

						"windows"   "708"
						"linux"     "728"
						"mac"       "728"
					}
				}
			}
		}
	}
}


/**
 * Class Hierarchy
 * -
 * CBaseEntity
 *     CBaseDelay
 *         CBaseAnimating
 *             CBaseToggle
 *                 CBaseMonster
 */
