/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your AMX Mod X install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after AMXX's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(AMX_Mod_X)
 */

"Games"
{
	"#default"
	{
		"Classes"
		{
			"CNihilanth"
			{
				"Offsets"
				{
					"m_flForce"  // float
					{
						"type"      "float"

						"windows"   "712"
						"linux"     "732"
						"mac"       "732"
					}

					"m_flNextPainSound"  // float
					{
						"type"      "float"

						"windows"   "716"
						"linux"     "736"
						"mac"       "736"
					}

					"m_velocity"  // Vector
					{
						"type"      "vector"

						"windows"   "720"
						"linux"     "740"
						"mac"       "740"
					}

					"m_avelocity"  // Vector
					{
						"type"      "vector"

						"windows"   "732"
						"linux"     "752"
						"mac"       "752"
					}

					"m_vecTarget"  // Vector
					{
						"type"      "vector"

						"windows"   "744"
						"linux"     "764"
						"mac"       "764"
					}

					"m_posTarget"  // Vector
					{
						"type"      "vector"

						"windows"   "756"
						"linux"     "776"
						"mac"       "776"
					}

					"m_vecDesired"  // Vector
					{
						"type"      "vector"

						"windows"   "768"
						"linux"     "788"
						"mac"       "788"
					}

					"m_posDesired"  // Vector
					{
						"type"      "vector"

						"windows"   "780"
						"linux"     "800"
						"mac"       "800"
					}

					"m_flMinZ"  // float
					{
						"type"      "float"

						"windows"   "792"
						"linux"     "812"
						"mac"       "812"
					}

					"m_flMaxZ"  // float
					{
						"type"      "float"

						"windows"   "796"
						"linux"     "816"
						"mac"       "816"
					}

					"m_vecGoal"  // Vector
					{
						"type"      "vector"

						"windows"   "800"
						"linux"     "820"
						"mac"       "820"
					}

					"m_flLastSeen"  // float
					{
						"type"      "float"

						"windows"   "812"
						"linux"     "832"
						"mac"       "832"
					}

					"m_flPrevSeen"  // float
					{
						"type"      "float"

						"windows"   "816"
						"linux"     "836"
						"mac"       "836"
					}

					"m_irritation"  // int
					{
						"type"      "integer"

						"windows"   "820"
						"linux"     "840"
						"mac"       "840"
					}

					"m_iLevel"  // int
					{
						"type"      "integer"

						"windows"   "824"
						"linux"     "844"
						"mac"       "844"
					}

					"m_iTeleport"  // int
					{
						"type"      "integer"

						"windows"   "828"
						"linux"     "848"
						"mac"       "848"
					}

					"m_hRecharger"  // EHANDLE
					{
						"type"      "ehandle"

						"windows"   "832"
						"linux"     "852"
						"mac"       "852"
					}

					"m_hSphere"  // EHANDLE[20]
					{
						"type"      "ehandle"
						"size"      "20"

						"windows"   "840"
						"linux"     "860"
						"mac"       "860"
					}

					"m_iActiveSpheres"  // int
					{
						"type"      "integer"

						"windows"   "1000"
						"linux"     "1020"
						"mac"       "1020"
					}

					"m_flAdj"  // float
					{
						"type"      "float"

						"windows"   "1004"
						"linux"     "1024"
						"mac"       "1024"
					}

					"m_pBall"  // CSprite*
					{
						"type"      "classptr"

						"windows"   "1008"
						"linux"     "1028"
						"mac"       "1028"
					}

					"m_szRechargerTarget"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1012"
						"linux"     "1032"
						"mac"       "1032"
					}

					"m_szDrawUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1076"
						"linux"     "1096"
						"mac"       "1096"
					}

					"m_szTeleportUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1140"
						"linux"     "1160"
						"mac"       "1160"
					}

					"m_szTeleportTouch"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1204"
						"linux"     "1224"
						"mac"       "1224"
					}

					"m_szDeadUse"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1268"
						"linux"     "1288"
						"mac"       "1288"
					}

					"m_szDeadTouch"  // char[64]
					{
						"type"      "string"
						"size"      "64"

						"windows"   "1332"
						"linux"     "1352"
						"mac"       "1352"
					}

					"m_flShootEnd"  // float
					{
						"type"      "float"

						"windows"   "1396"
						"linux"     "1416"
						"mac"       "1416"
					}

					"m_flShootTime"  // float
					{
						"type"      "float"

						"windows"   "1400"
						"linux"     "1420"
						"mac"       "1420"
					}

					"m_hFriend"  // EHANDLE[3]
					{
						"type"      "ehandle"
						"size"      "3"

						"windows"   "1404"
						"linux"     "1424"
						"mac"       "1424"
					}
				}
			}
		}
	}
}


/**
 * Class Hierarchy
 * -
 * CBaseEntity
 *     CBaseDelay
 *         CBaseAnimating
 *             CBaseToggle
 *                 CBaseMonster
 *                     CNihilanth
 */
